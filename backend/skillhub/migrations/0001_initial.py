# Generated by Django 5.2.7 on 2025-10-14 12:04

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SkillCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Category name (e.g., Programming, Music, Languages)",
                        max_length=100,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Brief description of this skill category",
                        verbose_name="description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="CSS class for category icon (e.g., 'fa-code' for programming)",
                        max_length=50,
                        verbose_name="icon class",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this category is active and visible",
                        verbose_name="active status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "skill category",
                "verbose_name_plural": "skill categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the skill (e.g., 'Python Programming', 'Spanish Language')",
                        max_length=200,
                        unique=True,
                        verbose_name="skill name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="General description of what this skill entails",
                        verbose_name="description",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="skills",
                        to="skillhub.skillcategory",
                        verbose_name="category",
                    ),
                ),
            ],
            options={
                "verbose_name": "skill",
                "verbose_name_plural": "skills",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proficiency_level",
                    models.CharField(
                        choices=[
                            ("BEGINNER", "Beginner"),
                            ("INTERMEDIATE", "Intermediate"),
                            ("ADVANCED", "Advanced"),
                            ("EXPERT", "Expert"),
                        ],
                        default="INTERMEDIATE",
                        max_length=20,
                        verbose_name="proficiency level",
                    ),
                ),
                (
                    "years_of_experience",
                    models.PositiveSmallIntegerField(
                        help_text="Years of experience in this skill",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="years of experience",
                    ),
                ),
                (
                    "certifications",
                    models.TextField(
                        blank=True,
                        help_text="List any relevant certifications or qualifications",
                        verbose_name="certifications",
                    ),
                ),
                (
                    "portfolio_links",
                    models.TextField(
                        blank=True,
                        help_text="Links to portfolios, projects, or work samples",
                        verbose_name="portfolio links",
                    ),
                ),
                (
                    "prerequisites",
                    models.TextField(
                        blank=True,
                        help_text="Required prerequisites for learning this skill",
                        verbose_name="prerequisites",
                    ),
                ),
                (
                    "learning_outcomes",
                    models.TextField(
                        help_text="What students will learn/achieve",
                        verbose_name="learning outcomes",
                    ),
                ),
                (
                    "teaching_methods",
                    models.TextField(
                        help_text="Your approach to teaching this skill",
                        verbose_name="teaching methods",
                    ),
                ),
                (
                    "estimated_duration",
                    models.PositiveSmallIntegerField(
                        help_text="Estimated time to learn basics",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="estimated duration",
                    ),
                ),
                (
                    "duration_type",
                    models.CharField(
                        choices=[
                            ("HOURS", "Hours"),
                            ("DAYS", "Days"),
                            ("WEEKS", "Weeks"),
                            ("MONTHS", "Months"),
                        ],
                        default="HOURS",
                        max_length=10,
                        verbose_name="duration type",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this skill is currently available for teaching",
                        verbose_name="active status",
                    ),
                ),
                (
                    "max_students",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Maximum number of simultaneous students",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="maximum students",
                    ),
                ),
                (
                    "available_time_slots",
                    models.TextField(
                        blank=True,
                        help_text="Describe your available time slots for teaching",
                        verbose_name="available time slots",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teachers",
                        to="skillhub.skill",
                        verbose_name="skill",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teaching_skills",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="teacher",
                    ),
                ),
            ],
            options={
                "verbose_name": "user skill",
                "verbose_name_plural": "user skills",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SkillMilestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        help_text="Order of this milestone in the learning path",
                        verbose_name="order",
                    ),
                ),
                (
                    "estimated_hours",
                    models.PositiveSmallIntegerField(
                        help_text="Estimated hours to complete this milestone",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="estimated hours",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="skillhub.userskill",
                        verbose_name="user skill",
                    ),
                ),
            ],
            options={
                "verbose_name": "skill milestone",
                "verbose_name_plural": "skill milestones",
                "ordering": ["user_skill", "order"],
            },
        ),
        migrations.CreateModel(
            name="SkillFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Rating from 0 to 5",
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                        verbose_name="rating",
                    ),
                ),
                ("comment", models.TextField(verbose_name="comment")),
                (
                    "is_recommended",
                    models.BooleanField(
                        default=True,
                        help_text="Would you recommend this skill/teacher to others?",
                        verbose_name="recommended",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_given",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="student",
                    ),
                ),
                (
                    "user_skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_received",
                        to="skillhub.userskill",
                        verbose_name="user skill",
                    ),
                ),
            ],
            options={
                "verbose_name": "skill feedback",
                "verbose_name_plural": "skill feedback",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SkillExchange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "learning_goals",
                    models.TextField(
                        help_text="What the learner wants to achieve",
                        verbose_name="learning goals",
                    ),
                ),
                (
                    "availability",
                    models.TextField(
                        help_text="Preferred time slots for learning sessions",
                        verbose_name="availability",
                    ),
                ),
                (
                    "proposed_duration",
                    models.PositiveSmallIntegerField(
                        help_text="Estimated number of hours needed for learning",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="proposed duration",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes or requirements",
                        verbose_name="notes",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "learner",
                    models.ForeignKey(
                        help_text="User learning the skill",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="learning_exchanges",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="learner",
                    ),
                ),
                (
                    "user_skill",
                    models.ForeignKey(
                        help_text="The skill being taught",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="exchanges",
                        to="skillhub.userskill",
                        verbose_name="teacher skill",
                    ),
                ),
            ],
            options={
                "verbose_name": "skill exchange",
                "verbose_name_plural": "skill exchanges",
                "ordering": ["-created_at"],
                "permissions": [
                    ("can_accept_exchange", "Can accept skill exchange"),
                    ("can_mark_completed", "Can mark exchange as completed"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="skill",
            index=models.Index(fields=["name"], name="skillhub_sk_name_6028e9_idx"),
        ),
        migrations.AddIndex(
            model_name="skill",
            index=models.Index(
                fields=["category"], name="skillhub_sk_categor_f6ee21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userskill",
            index=models.Index(
                fields=["user", "skill", "is_active"],
                name="skillhub_us_user_id_f9f2e5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userskill",
            index=models.Index(
                fields=["proficiency_level", "is_active"],
                name="skillhub_us_profici_1e1d04_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userskill",
            unique_together={("user", "skill")},
        ),
        migrations.AlterUniqueTogether(
            name="skillmilestone",
            unique_together={("user_skill", "order")},
        ),
        migrations.AddIndex(
            model_name="skillfeedback",
            index=models.Index(
                fields=["user_skill", "-created_at"],
                name="skillhub_sk_user_sk_271034_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="skillfeedback",
            index=models.Index(
                fields=["-rating", "-created_at"], name="skillhub_sk_rating_3b5020_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="skillfeedback",
            unique_together={("user_skill", "student")},
        ),
        migrations.AddIndex(
            model_name="skillexchange",
            index=models.Index(
                fields=["user_skill", "status", "-created_at"],
                name="skillhub_sk_user_sk_6efca0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="skillexchange",
            index=models.Index(
                fields=["learner", "status", "-created_at"],
                name="skillhub_sk_learner_10f420_idx",
            ),
        ),
    ]
